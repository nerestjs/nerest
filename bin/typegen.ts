import path from 'path';
import fs from 'fs/promises';
import fg from 'fast-glob';
import { compileFromFile } from 'json-schema-to-typescript';

// Comment at the start of every type definition file, alerting
// developers to not modify the file by hand
const bannerComment = `
/**
 * This file was automatically generated by Nerest.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source schema.json file,
 * and run "nerest typegen" to regenerate this file.
 */`.trim();

// Generates a TypeScript type definition for each JSON Schema in the given globs
export async function typegen(globs: string[]) {
  // If no globs are provided, default to the schema.json file in each app directory
  if (globs.length === 0) {
    globs = ['apps/*/schema.json'];
  }

  const paths = await fg.glob(globs, { onlyFiles: true });
  console.log(`Found ${paths.length} schemas, generating types...`);

  for (const schemaPath of paths) {
    // Turn each schema.json file into schema.d.ts
    const typePath = schemaPath.replace('.json', '.d.ts');
    const type = await compileFromFile(schemaPath, {
      cwd: path.resolve(path.dirname(schemaPath)),
      bannerComment,
    });
    await fs.writeFile(typePath, type, 'utf-8');
    console.log(`${schemaPath} -> ${typePath}`);
  }
}
